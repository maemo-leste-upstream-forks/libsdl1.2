Description: CVE-2019-7635_CVE-2019-7636, CVE-2019-7638
 CVE-2019-7635
a heap-based buffer over-read in Blit1to4 in video/SDL_blit_1.c
 CVE-2019-7636
a heap-based buffer over-read in SDL_GetRGB in video/SDL_pixels.c
 CVE-2019-7638
buffer overwrite when the SDL_LoadBMP_RW()
loads colors from a file.

---
Author: Abhijith PA <abhijith@debian.org>
Origin: https://bugzilla.libsdl.org/attachment.cgi?id=3637
        https://bugzilla.libsdl.org/attachment.cgi?id=3645
        https://hg.libsdl.org/SDL/rev/19d8c3b9c251

Bug: https://bugzilla.libsdl.org/show_bug.cgi?id=4499
     https://bugzilla.libsdl.org/show_bug.cgi?id=4498
     https://bugzilla.libsdl.org/show_bug.cgi?id=4500
Last-Update: 2019-03-08

Index: libsdl1.2-1.2.15/src/video/SDL_bmp.c
===================================================================
--- libsdl1.2-1.2.15.orig/src/video/SDL_bmp.c
+++ libsdl1.2-1.2.15/src/video/SDL_bmp.c
@@ -163,6 +163,14 @@ SDL_Surface * SDL_LoadBMP_RW (SDL_RWops
 			ExpandBMP = biBitCount;
 			biBitCount = 8;
 			break;
+		case 2:
+		case 3:
+		case 5:
+		case 6:
+		case 7:
+			SDL_SetError("%d-bpp BMP images are not supported", biBitCount);
+			was_error = SDL_TRUE;
+			goto done;
 		default:
 			ExpandBMP = 0;
 			break;
@@ -233,6 +241,10 @@ SDL_Surface * SDL_LoadBMP_RW (SDL_RWops
 	if ( palette ) {
 		if ( biClrUsed == 0 ) {
 			biClrUsed = 1 << biBitCount;
+		} else if ( biClrUsed > (1 << biBitCount) ) {
+			SDL_SetError("BMP file has an invalid number of colors");
+			was_error = SDL_TRUE;
+			goto done;
 		}
 		if ( biSize == 12 ) {
 			for ( i = 0; i < (int)biClrUsed; ++i ) {
@@ -296,6 +308,12 @@ SDL_Surface * SDL_LoadBMP_RW (SDL_RWops
 				}
 				*(bits+i) = (pixel>>shift);
 				pixel <<= ExpandBMP;
+				if ( bits[i] >= biClrUsed ) {
+					SDL_SetError(
+						"A BMP image contains a pixel with a color out of the palette");
+					was_error = SDL_TRUE;
+					goto done;
+				}
 			} }
 			break;
 
@@ -306,6 +324,17 @@ SDL_Surface * SDL_LoadBMP_RW (SDL_RWops
 				was_error = SDL_TRUE;
 				goto done;
 			}
+
+			if ( 8 == biBitCount && palette && biClrUsed < (1 << biBitCount ) ) {
+				for ( i=0; i<surface->w; ++i ) {
+					if ( bits[i] >= biClrUsed ) {
+						SDL_SetError(
+							"A BMP image contains a pixel with a color out of the palette");
+						was_error = SDL_TRUE;
+						goto done;
+					}
+				}
+			}
 #if SDL_BYTEORDER == SDL_BIG_ENDIAN
 			/* Byte-swap the pixels if needed. Note that the 24bpp
 			   case has already been taken care of above. */
